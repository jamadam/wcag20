<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE div2
  SYSTEM "../xmlspec.dtd">
<div2 id="navigation-mechanisms-focus-order" role="extsrc">
   <head>2.4.3</head>
   <div3 role="intent">
      <head/>

<p>この達成基準の意図は、利用者がコンテンツ内を一つずつ順を追いながら行き来している際に、キーボードにより操作可能な順序でコンテンツの意味に添って、情報と出会うようにすることである。このことにより、利用者のコンテンツに対するメンタルモデルを一貫したものとし、利用者が困惑する可能性を引き下げる。コンテンツの論理的な関係性を反映した異なる順序になることもある。例えば、テーブルのある行又は列にある構成要素内を一度に移動する際には、行を移動する際も列を移動する際もコンテンツにおける関係性を反映した順序になる。どちらの順序もこの達成基準を満たすことができる 。</p>
<p>ウェブコンテンツでのナビゲーションの順番が決まる方法は、コンテンツで用いるウェブコンテンツ技術によって定義されている。例えば、シンプルな HTML は、タブ移動順序によってナビゲーション順序を定義している。動的な HTML では、フォーカスを他の要素にも割り当てることができるように tabindex 属性を付加して、スクリプトを用いてナビゲーション順序を修正することができる。スクリプトも、tabindex 属性も使用していない場合、ナビゲーション順序は、コンポーネントがコンテンツの流れの中で表れる順序になる (HTML 4.01 仕様書の 17.11 "Giving focus to an element" を参照のこと)。</p>
<trnote>
<p>HTML 4.01 は Superseded Recommendation としてマークされ、廃止された仕様である。上記は、<a href="https://www.w3.org/TR/html52/editing.html#the-tabindex-attribute">HTML 5.2§5.4.3. The tabindex attribute</a> を代わりに参照することができる。</p>
</trnote>
<p>この達成基準で対処しているナビゲーション順序ではない、キーボードナビゲーションの一例は、ツリーコンポーネントを行き来するための矢印キーを用いたナビゲーションである。利用者は、上下の矢印キーを使って、ツリーのノードからノードへと移動することができる。右向き矢印キーを押下するとノードを展開して、それから下向き矢印キーを使用すると新しく展開されたノードへと移動していく。アイテムが展開されたり閉じられたりするたびに、ナビゲーション順序に追加されたり削除されたりするので、このナビゲーション順序は、ツリーコントロールで予期される順序に従っている。そして、アイテムが展開されたり閉じられたりするたびに、ナビゲーション順序に追加されたり削除されたりする。</p>
<p>利用者はウェブページを理解して操作できているが、フォーカス順序がプログラムが解釈する音声読み上げ順序 (達成基準 1.3.2 を参照) とは一致しないかもしれない。コンテンツに対して考えられうる論理的な音声読み上げ順序が数通りあり、フォーカス順序はそのうちのどれかと合致するのかもしれない。しかし、特定のプレゼンテーションにおける順序が、プログラムが解釈する音声読み上げ順序とは異なるとき、複数あるプレゼンテーションの一つを使う利用者は、そのウェブページを理解したり操作したりするのを難しいと感じるかもしれない。コンテンツ制作者は、ウェブページを設計する際に、すべての利用者のことを注意深く考慮すべきである。</p>
<p>例えば、画面を見ているキーボードの利用者が、ウェブページの視覚的なプレゼンテーションの順序で情報をやりとりしているのに対し、スクリーンリーダーの利用者は、プログラムで判断される音声読み上げ順序で情報をやりとりしている。フォーカス順序が双方の利用者にとって意味が通じるようにし、どちらかがコンテンツ内をランダムに飛び回るようなことのないように、注意すべきである。</p>
<p>明確にするために:</p>
<olist>
  <item>
    <p>フォーカス可能な構成要素は、ナビゲーションの順序が意味と操作性に影響を及ぼす時のみ、意味と操作性を保つ順序でフォーカスを受ける必要がある。</p>
  </item>
  <item>
    <p>必要な場合は、意味と操作性を保つ複数の順序があるかもしれない。</p>
  </item>
  <item>
    <p>意味と操作性を保つ複数の順序がある場合、それらのうち一つは提供される必要がある。</p>
  </item>
</olist>
<div4 role="benefits">
<head>達成基準 2.4.3 の具体的なメリット</head>
<p>これらの達成方法は、コンテンツ内を順番に行き来していて、フォーカス順序が音声読み上げ順序と一致しているものと考えている、キーボードの利用者の役に立つ。</p>
<ulist>
	<item><p>論理的で、使いやすいフォーカス順序は、ページの操作をキーボード使用に依存している運動障害のある利用者の役に立つ。</p></item>
	<item><p>字を読むのが困難な障害のある利用者は、Tab キーを押下してフォーカスが予期しないどこかへ移動してしまうと、迷子のようになってしまう恐れがある。彼らは論理的なフォーカス順序の恩恵を受けている。</p></item>
	<item><p>視覚障害のある利用者は、Tab キーを押下してフォーカスが予期しないどこかへ移動してしまったり、インタラクティブな要素に囲まれているコンテンツを容易に見つけることができなかったりすると、迷子のようになってしまう恐れがある。</p></item>
	<item><p>画面拡大ソフトを使用していて、拡大率を高くしている利用者には、ページのごく小さい一部分だけしか見えないことがある。そのような利用者は、フォーカス順序が論理的でないと、誤った文脈でコンテンツの一部分を解釈してしまう恐れがある。</p></item>
</ulist>
</div4>
</div3>

<div3 role="examples">
<head/>
<olist>
	<item><p>インタラクティブなコントロールのツリーがあるウェブページ上で、利用者は上下の矢印キーを使って、ツリーのノードからノードへと移動することができる。右向き矢印キーを押下するとノードを展開して、それから下矢印キーを使用すると新しく展開されたノードへと移動していく。</p></item>
	<item><p>あるウェブページは、スクリプトでモードレスダイアログを実装している。起動ボタンを動作させると、ダイアログが開く。ダイアログ内にあるインタラクティブな要素が、起動ボタンのすぐ後のフォーカス順序の位置に挿入される。ダイアログが開いているときには、フォーカス順序は、その起動ボタンからダイアログ内の要素へ移動し、それから起動ボタンの後にあるインタラクティブな要素へと移動する。ダイアログが閉じているときは、フォーカス順序は起動ボタンからその次に続いている要素へ移動する。</p>
<trnote><p>モードレスダイアログとは、ダイアログボックスを閉じなくても作業が続行できるタイプのダイアログボックスのことである。<a href="http://e-words.jp/w/%E3%83%A2%E3%83%BC%E3%83%89%E3%83%AC%E3%82%B9%E3%83%80%E3%82%A4%E3%82%A2%E3%83%AD%E3%82%B0.html">モードレスダイアログ（モードレスウィンドウ）とは - IT 用語辞典</a>も参照のこと。</p></trnote></item>
	<item><p>あるウェブページは、スクリプトでモーダルダイアログを実装している。起動ボタンを動作させると、ダイアログが開き、そのダイアログにある最初のインタラクティブな要素にフォーカスがあたる。ダイアログが開いている限り、フォーカスはダイアログ内の要素だけに限定される。ダイアログが閉じられると、フォーカスはボタン又はボタンの次にある要素へ戻る。</p>
<trnote><p>モーダルダイアログとは、ダイアログボックスの中だけで強制的に作業をさせるダイアログボックスで、それが閉じられない限り作業の続行ができないタイプのダイアログボックスのことである。<a href="http://e-words.jp/w/%E3%83%A2%E3%83%BC%E3%83%80%E3%83%AB%E3%83%80%E3%82%A4%E3%82%A2%E3%83%AD%E3%82%B0.html">モーダルダイアログ（モーダルウィンドウ）とは - IT 用語辞典</a>も参照のこと。</p></trnote></item>
	<item><p>HTML で制作されたウェブページには、左側にナビゲーションがある。そのナビゲーションは、HTML ではメインコンテンツの後にあり、CSS を用いてページの左側に表示されるように指定されている。tabindex 属性又は JavaScript を用いずに、フォーカスがメインコンテンツへ移動できるようにするためである。</p><note><p>この事例は達成基準を満たしているが、必ずしもすべての CSS による配置が当てはまるとはかぎらない。配置が複雑な例では、意味及び操作性を保持できることもあれば、できないこともある。</p></note></item>
	<item><p>次の例は、<emph role="bold">この達成基準を満たさない</emph>:</p><p>ある企業のウェブサイトに、マーケティングデータを収集するフォームがあり、利用者がその企業の発行するいくつかのニュースレターに登録できるようになっている。マーケティングデータを収集するためのフォームのセクションには、氏名、郵便番号、県、市町村、番地などのテキストフィールドがある。フォームのその他のセクションには、利用者が配信してほしいニュースレターを指定することができるようにいくつかのチェックボックスがある。しかし、そのフォームのタブ移動順序は、フォームにおける異なるセクションのフィールドを行ったり来たりする。そのため、フォーカスは、氏名のテキストフィールドからあるチェックボックスへ、次に番地のテキストフィールドへ、そしてまた別のチェックボックスへというふうに移動してしまう。</p></item>
</olist>
</div3>

<div3 role="resources">
<head/>
</div3>

<div3 role="techniques">
<head/>
<div4 role="sufficient">
<head/>
<olist>
	<item><p><loc href="G59" linktype="general"/></p></item>
	<item><p>次の達成方法の一つを用いて、コンテンツ内の順序及び関係性に従った順序でフォーカスを要素に与える:</p><ulist>
		<item><p><loc href="H4" linktype="html"/></p></item>
		<item><p><loc href="FLASH15" linktype="flash"/></p></item>
		<item><p><loc href="C27" linktype="css"/></p></item>
		<item><p><loc href="PDF3" linktype="pdf"/></p></item>
		<item><p><loc href="SL34" linktype="silverlight"/></p></item>
	</ulist>
	</item>
	<item role="script"><p>次の達成方法の一つを用いて、ウェブページを動的に変化させる:</p><ulist>
		<item><p><loc href="SCR26" linktype="script"/></p></item>
		<item><p><loc href="SCR37" linktype="script"/></p></item>
		<item><p><loc href="SCR27" linktype="script"/></p></item>
	</ulist>
	</item>
</olist>
</div4>

<div4 role="tech-optional">
<head/>
<ulist>
	<item><p>キーボードフォーカスを受け取ったリンクもしくはコントロールが、強調され非常に目立つメカニズムを提供する (リンク追加予定)</p></item>
	<item><p>代替となるプレゼンテーション順序を作り出す (リンク追加予定)</p></item>
</ulist>
</div4>

<div4 role="failures">
<head/>
<ulist>
	<item><p><loc href="F44" linktype="failure"/></p></item>
	<item><p><loc href="F85" linktype="failure"/></p></item>
</ulist>
</div4>
</div3>
</div2>
