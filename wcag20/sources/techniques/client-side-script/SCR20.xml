<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE technique
  SYSTEM "../../xmlspec.dtd">
<technique id="SCR20">
   <short-name>キーボードとその他のデバイス固有の機能を両方とも使用する</short-name>
   <applicability>
      <p>機能を実装するためにスクリプトを用いる全てのコンテンツ</p>
   </applicability>
   <applies-to>
      <success-criterion idref="keyboard-operation-keyboard-operable" relationship="sufficient"/>
      <success-criterion idref="keyboard-operation-all-funcs" relationship="sufficient"/>
   </applies-to>
   <description>
    <p>この達成方法の目的は、イベントと関連付けられたスクリプト機能を含むコードを伴った、キーボード固有及びマウス固有のイベント双方の使用を明示することである。キーボード固有及びマウス固有のイベントを一緒に用いることにより、さまざまな種類の機器でコンテンツを操作できることを保証することができる。例えば、スクリプトが keypress を認識したときに、マウスボタンをクリックしたときと同じ動作を行うことができるようにする。このテクニックにより、キーボードによるアクセスだけでなく他の機器によるアクセスの達成基準を満たすことができる。</p>
    <p>JavaScript でよく使用されるイベントハンドラには、onblur、onchange、onclick、ondblclick、onfocus、onkeydown、onkeypress、onkeyup、onload、onmousedown、onmousemove、onmouseout、onmouseover、onmouseup、onreset、onselect、onsubmit、onunload が含まれる。いくつかのマウス固有の機能には、論理的に対応するキーボード固有の機能がある (例えば 'onmouseover' と 'onfocus' のように)。キーボード向けのイベントハンドラは、対応するマウス向けの機能とともに提供すべきである。</p>
    <p>次の表は、マウスイベントハンドラに対応するキーボードイベントハンドラの候補である。</p>
    <table border="1" cellspacing="0">
<caption>対応表	</caption>
				<tbody>
<tr>
<th scope="col">マウス向け</th>
								<th scope="col">キーボード向け</th>
						</tr>
<tr>
<td><code>mousedown</code></td>
<td><code>keydown</code></td>
						</tr>
<tr>
<td><code>mouseup</code></td>
								<td><code>keyup</code></td>
						</tr>
<tr>
<td>
<code>click</code> <sup>[1]</sup>
</td>
								<td><code>keypress</code> <sup>[2]</sup></td>
						</tr>
<tr>
<td><code>mouseover</code></td>
								<td><code>focus</code></td>
						</tr>
<tr>
<td><code>mouseout</code></td>
								<td><code>blur</code></td>
						</tr>
</tbody>
</table>
    <p><sup>1</sup> <code>click</code> は基本的にはマウスのイベントハンドラであるが、ほとんどの HTML 及び XHTML 向けのユーザエージェントは、HTML のネイティブコントロール (例: ボタン又はリンク) が有効化された場合、マウス又はキーボードのどちらで有効化されたかにかかわらず、イベントを処理することができる。そのため、もともとフォーカスできる HTML 要素にハンドラを追加するときは、実際にはキーボード用のイベントを補完する必要はない。しかし、下記の事例 2 のように他のイベントにハンドラを追加するときは、必要である。</p>
    <p><sup>2</sup> <code>keypress</code> イベントハンドラは、どのキーに対しても有効であることから、そのイベントハンドラ関数では、イベントを処理する前に、Enter キーが押されたかどうかをチェックすべきである。そうでなければ、イベントハンドラは利用者が任意のキーを押すたびに実行され、コントロールから抜けるために Tab キーを押すような場合にも実行されるので、通常は望ましくない。</p>
    <p>(<code>dblclick</code> 及び <code>mousemove</code> のような) いくつかのマウス固有の機能には、対応するキーボード固有の機能がない。つまり、いくつかの機能は機器別に違った実装をしなければならないということである (例えば、実装されているマウス固有の機能と同等の機能を、キーボードから実行するための一連のボタン操作を含むようにする)。</p>
  </description>
   <examples>
      <eg-group>
      <description><p>この画像リンクの例では、利用者がポインタを画像に重ねると画像が変化する。キーボード利用者に同様の体験を提供するには、利用者が画像リンクに Tab キーで移動した場合に、画像を変化させればよい。</p>
</description>
         <code><![CDATA[
<a href="menu.php" onmouseover="swapImageOn('menu')" onfocus="swapImageOn('menu')" 
onmouseout="swapImageOff('menu')" onblur="swapImageOff('menu')"> 
<img id="menu" src="menu_off.gif" alt="Menu" /> 
</a>]]></code>
    </eg-group>
    <eg-group>
      <description><p>この事例では、マウスとキーボードの両方を用いて機能を実行できる画像のカスタムコントロールを紹介している。マウスイベントの <code>onclick</code> は、対応するキーボードイベントの <code>onkeypress</code> によって補完されている。<code>tabindex</code> 属性は、キーボードを用いて Tab キーで移動した際に、画像の上で停止させるためのものである。この事例では <code>nextPage()</code> 関数が、押されたキーボードのキーがEnterであることを確認すべきであり、そうでない場合は、画像がフォーカスを持つ間にすべてのキーボード動作に応答するが、これは期待される動作ではないことに注意する。</p>
</description>
         <code><![CDATA[
<img onclick="nextPage();" onkeypress="nextPage();" tabindex="0" src="arrow.gif" 
alt="Go to next page"> ]]></code>
      <description><note><p>この例では <el>img</el> 要素に tabindex を用いている。現時点では (文法的に) 妥当ではないが、この機能を実装するための古典的なテクニックとして用いられている。このようなカスタムコントロールでは、コントロールの役割 (role) と状態 (state) を支援技術に引き渡すために WAI-ARIA も用いるべきである。</p>
				</note>
</description>
    </eg-group>
   </examples>
   <resources>
      <see-also>
         <ulist>
            <item>
               <p> 
                  <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://webaim.org/techniques/javascript/">Overview of Creating Accessible JavaScript</loc> 
               </p>
            </item>
         </ulist>
      </see-also>
   </resources>
   <related-techniques>
      <relatedtech idref="G90"/>
   </related-techniques>
   <tests>
      <procedure>
      <olist>
        <item>
          <p>全てのインタラクティブな機能を探す。</p>
        </item>
        <item>
          <p>それらのインタラクティブな機能全てに、キーボードだけを使ってアクセスできる。</p>
        </item>
      </olist>
    </procedure>
      <expected-results>
         <ulist>
            <item>
               <p>2. を満たしている。</p>
            </item>
         </ulist>
      </expected-results>
   </tests>
</technique>
