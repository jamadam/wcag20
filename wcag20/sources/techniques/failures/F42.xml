<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE technique
  SYSTEM "../../xmlspec.dtd">
<technique id="F42">
   <short-name>達成基準 1.3.1、達成基準 2.1.1、達成基準 2.1.3、又は達成基準 4.1.2 の失敗例 － リンクをエミュレートしている</short-name>
   <applicability>
      <p>スクリプトを含む HTML 及び XHTML。</p>
   </applicability>
   <applies-to>
      <success-criterion idref="content-structure-separation-programmatic" relationship="failure"/>
      <success-criterion idref="keyboard-operation-keyboard-operable" relationship="failure"/>
      <success-criterion idref="keyboard-operation-all-funcs" relationship="failure"/>
      <success-criterion idref="ensure-compat-rsv" relationship="failure"/>
   </applies-to>
   <description>
    <p>この失敗は、JavaScript のイベントハンドラが、リンクをエミュレートするために要素に付加されている場合に発生する。この方法で作成されたリンクは、キーボードでタブ移動することができず、他のコントロール及び／又はリンクのようにキーボードでフォーカスを受け取れない。スクリプトのイベントがリンクをエミュレートするために使用される場合、支援技術を含むユーザエージェントは、コンテンツ内のリンクをリンクとして識別できないかもしれない。インタラクティブなコントロールとして認識されてもリンクとして認識されないかもしれない。そのような要素は、ユーザエージェントや支援技術によって生成されたリンクリストには現れない。</p>
    <p><note>支援技術がリンクコントロールとして不明な要素を識別するために、ARIA <att>role</att> 属性を使用することは可能である。しかし、ARIA の最善の対応策としては、<loc href="http://www.w3.org/TR/aria-in-html/#first-rule-of-aria-use">可能な限りネイティブな要素を使用すること</loc>が求められ、不明な要素をリンクとして識別するために <att>role</att> 属性を使用することは推奨しない。</note></p>
    <p><el>a</el> と <el>area</el> 要素は、リンクをマークアップするためのものである。</p>
  </description>
   <examples>
      <eg-group role="failure">
      <head><el>span</el> 要素のスクリプト</head>
      <description><p>スクリプトによるイベントハンドリングが <code>span</code> 要素に追加されているので、それがマウスでクリックされた場合はリンクとして機能する。支援技術はこの要素をリンクとして認識しない。</p>
</description>
         <code role="html401"><![CDATA[
<span onclick="location.href='newpage.html'">
    Fake link
</span>
]]></code>
    </eg-group>
    <eg-group role="failure">
      <head><el>img</el> 要素のスクリプト</head>
      <description><p>スクリプトによるイベントハンドリングが <code>img</code> 要素に追加されているので、それがマウスでクリックされた場合はリンクとして機能する。支援技術はこの要素をリンクとして認識しない。</p>
</description>
         <code role="html401"><![CDATA[
   <img src="go.gif" 
   alt="go to the new page" 
   onclick="location.href='newpage.html'">
]]></code>
    </eg-group>
    <eg-group role="failure">
      <head>キーボードサポートがある <el>img</el> 要素のスクリプト</head>
      <description><p>スクリプトによるイベントハンドリングが <code>img</code> 要素に追加されているので、リンクとして機能する。この例では、リンク機能がマウス又はユーザエージェントが要素をタブ移動可能な範囲に含まれる場合には Enter キーで機能する。それでもなお、この要素はリンクとしては認識されない。</p>
</description>
      <code role="html401"><![CDATA[
function doNav(url)
{
   window.location.href = url;
}

function doKeyPress(url)
{
   //Enterキーが押された場合
   if (window.event.type == "keypress" &amp;&amp;
       window.event.keyCode == 13)
   {
      doNav(url);
   }
}]]></code>
      <description><p>画像のためのマークアップ:</p>
</description>
      <code role="html401"><![CDATA[
<p>
	<img src="bargain.jpg"
		tabindex="0" 
		alt="View Bargains"
		onclick="doNav('viewbargains.html');"
		onkeypress="doKeyPress('viewbargains.html');"
	>
</p>]]></code>
    </eg-group>
    <eg-group role="failure">
      <head><el>div</el> 要素のスクリプト</head>
      <description><p>この例では、<el>div</el> 要素がリンクとして機能するようにスクリプトを使用している。制作者は、完璧なキーボードアクセスを提供し、コンテンツの再利用を可能にするためイベントハンドラをマークアップから切り離しているが、この <el>div</el> 要素は支援技術にリンクとして認識されない。</p>
</description>
      <code role="html401"><![CDATA[
window.onload = init;

function init()
{
	var objAnchor = document.getElementById('linklike');

	objAnchor.onclick = function(event){return changeLocation(event,
'surveyresults.html');};
	objAnchor.onkeypress = function(event){return changeLocation(event,
'surveyresults.html');};
}

function changeLocation(objEvent, strLocation)
{
	var iKeyCode;

	if (objEvent &amp;&amp; objEvent.type == 'keypress')
	{
		if (objEvent.keyCode)
			iKeyCode = objEvent.keyCode;
		else if (objEvent.which)
			iKeyCode = objEvent.which;

		if (iKeyCode != 13 &amp;&amp; iKeyCode != 32)
			return true;
	}

	window.location.href = strLocation;
}]]></code>
      <description><p><el>div</el> 要素のためのマークアップ:</p>
</description>
      <code role="html401"><![CDATA[
<div id="linklike">
View the results of the survey.
</div>]]></code>
    </eg-group>
   </examples>
   <resources>
      <see-also>
         <ulist>
            <item>
               <p>
                  <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.w3.org/TR/wai-aria/">Accessible Rich Internet Applications (WAI-ARIA) Version 1.0</loc>
               </p>
            </item>
         </ulist>
      </see-also>
   </resources>
   <related-techniques>
      <relatedtech idref="G115"/>
      <relatedtech idref="F59"/>
   </related-techniques>
   <tests>
      <procedure>
       <p>要素がリンクをエミュレートするために JavaScript のイベントハンドラを使用したリンクとして提示されるすべての要素について:</p>
      <olist>
        <item>
          <p>プログラムによる解釈のされた要素のロールが <prop>link</prop> かどうかを確認する。</p>
        </item>
        <item>
          <p>エミュレートされたリンクが、キーボード操作で有効にできるかどうかを確認する。</p>
        </item>
      </olist>
    </procedure>
      <expected-results>
         <ulist>
            <item>
               <p>1. が偽である場合、この失敗条件が適用され、コンテンツは達成基準 1.3.1 及び 4.1.2 の失敗となる。2. が偽である場合、この失敗条件が適用され、コンテンツは達成基準 2.1.1 及び 2.1.3 の失敗となる。</p>
            </item>
         </ulist>
      </expected-results>
   </tests>
</technique>
