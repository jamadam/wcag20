<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE technique
  SYSTEM "../../xmlspec.dtd">
<technique id="G146">
   <short-name>リキッドレイアウトを使用する</short-name>
   <applicability>
      <p>全てのウェブコンテンツ技術</p>
   </applicability>
   <applies-to>
      <success-criterion idref="visual-audio-contrast-scale" relationship="cosufficient"/>
      <success-criterion idref="visual-audio-contrast-visual-presentation"
                         relationship="cosufficient"/>
   </applies-to>
   <description>
    <p>この達成方法の目的は、利用可能な水平方向のスペースに適合するレイアウト技術を使用することで水平方向のスクロールバーを導入することなくコンテンツの提示を可能にすることである。リキッドレイアウトは、テキストのサイズを変更するとともに、画面上にその領域を表示するために必要なリフローを行うようなレイアウト領域を定義する。したがって、厳格なレイアウトは異なるが、要素と読み上げ順序の関係は同じままである。これは、さまざまなデバイスやフォントサイズの好みの異なる利用者に適したデザインを作成するための効果的な方法である。</p>
    <p>リキッドレイアウトの基本原則は次のとおりである。</p>
    <olist>
      <item>
        <p>レイアウト領域を、テキストに応じてサイズが変わるユニットを利用して定義する。つまり、テキストの拡大縮小と同じように、レイアウト領域が広まったり狭まったりする。</p>
      </item>
      <item>
        <p>レイアウト領域を、フロートボックスを隣り合わせで横に並べたように配置する。つまり、パラグラフの中の各単語とほぼ同じような方法で、必要に応じて行送りされる。</p>
      </item>
    </olist>
    <p>複雑なリキッドレイアウトの実現には、入れ子にしたレイアウト領域、つまり大きな領域の中に部分ごとの複数の領域を入れ込む方法を利用する場合がある。単純なリキッドレイアウトであっても、テキストサイズの違いに関わらず見た目のよさを損なわないようにデザインを工夫する必要があるとはいえ、十分に計画したリキッドレイアウトは最も効果的なページデザインとなるだろう。</p>
  </description>
   <examples>
      <eg-group>
      <head>HTML と CSS での単純なリキッドレイアウト</head>
      <description><p>以下は、リキッドレイアウトの実現に HTML と CSS を利用した、かなり単純な事例である。3 つの列はテキストサイズが変わるのと同じようにサイズ調整される。もし全ての列を足した幅が、3 つの列で利用できる幅の合計を超えてしまった場合、最後の列は前の列の横に置かれるのではなく、下に送られる。列に含まれるテキストの中で最も長い単語が列の幅におさまっている限り、フォントサイズを大きくすることができ、ブラウザの横スクロールバーへの影響はない。この事例では列の幅指定にパーセントを利用しており、「float」プロパティを利用して列をフロート領域として定義している。</p>
</description>
               <code><![CDATA[
              <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
                <html xmlns="http://www.w3.org/1999/xhtml">
                <head>
                <meta http-equiv="content-type" content="text/html; charset=utf-8" />
                <title>Example of Basic Liquid Layout</title>
                <style type="text/css">
                .column
                {
                border-left: 1px solid green;
                padding-left:1%;
                float: left;
                width: 32%;
                }
                #footer
                {
                border-top: 1px solid green;
                clear: both;
                }
                </style>
                </head>
                <body>
                <h1>WCAG Example</h1>
                <h2>Text in Three Columns</h2>
                <div title="column one" class="column">
                <h3>Block 1</h3>
                <p> The objective of this technique is to be able to present content 
                without introducing horizontal scroll bars by using layout 
                techniques that adapt to the available horizontal space.
                </p>
                </div>
                <div title="column two" class="column">
                <h3>Block 2</h3>
                <p> This is a very simple example of a page layout that adapts as the
                text size changes.
                </p>
                </div>
                <div title="column three" class="column">
                <h3>Block 3</h3>
                <p> For techniques that support more complex page layouts, see the
                Resources listed below.
                </p>
                </div>
                <p id="footer">Footer text</p>
                </body>
                </html>
            ]]></code>
    </eg-group>
   </examples>
   <resources>
      <see-also>
         <ulist>
            <item>
               <p>
                	<loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.webreference.com/authoring/style/sheets/css_mastery2/index.html">CSS Mastery: Fixed-Width, Liquid, and Elastic Layouts and Faux Columns</loc>
                </p>
            </item>
            <item>
               <p>
                  <loc xmlns:xlink="http://www.w3.org/1999/xlink" href="http://cssliquid.com/">Liquid Designs</loc>
                </p>
            </item>
         </ulist>
      </see-also>
   </resources>
   <related-techniques>
      <relatedtech idref="C12"/>
      <relatedtech idref="C13"/>
      <relatedtech idref="C14"/>
   </related-techniques>
   <tests>
      <procedure>
      <olist>
        <item>
          <p>ユーザエージェントでコンテンツを表示する。</p>
        </item>
        <item>
          <p>テキストサイズを 200% に拡大する。</p>
        </item>
        <item>
          <p>ブラウザの横スクロールバーが表示されることなしに、すべてのコンテンツが表示され、すべての機能が利用できるか確認する。</p>
        </item>
      </olist>
    </procedure>
      <expected-results>
         <ulist>
            <item>
               <p>3. を満たしている。</p>
            </item>
         </ulist>
      </expected-results>
   </tests>
</technique>
